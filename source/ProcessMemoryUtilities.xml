<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ProcessMemoryUtilities</name>
    </assembly>
    <members>
        <member name="F:ProcessMemoryUtilities.Memory.ProcessMemory.ProcessAllocateAccess">
            <summary>
            Provides a constant for OpenProcess with memory operation access.
            </summary>
        </member>
        <member name="F:ProcessMemoryUtilities.Memory.ProcessMemory.ProcessExecuteAccess">
            <summary>
            Provides a constant for OpenProcess with execute access.
            </summary>
        </member>
        <member name="F:ProcessMemoryUtilities.Memory.ProcessMemory.ProcessInformationAccess">
            <summary>
            Provides a constant for OpenProcess with information access.
            </summary>
        </member>
        <member name="F:ProcessMemoryUtilities.Memory.ProcessMemory.ProcessReadAccess">
            <summary>
            Provides a constant for OpenProcess with read access.
            </summary>
        </member>
        <member name="F:ProcessMemoryUtilities.Memory.ProcessMemory.ProcessReadWriteAccess">
            <summary>
            Provides a constant for OpenProcess with read and write access.
            </summary>
        </member>
        <member name="F:ProcessMemoryUtilities.Memory.ProcessMemory.ProcessWriteAccess">
            <summary>
            Provides a constant for OpenProcess with write access.
            </summary>
        </member>
        <member name="T:ProcessMemoryUtilities.Memory.ProcessAccessFlags">
            <summary>
            Process Security and Access Rights
            </summary>
        </member>
        <member name="F:ProcessMemoryUtilities.Memory.ProcessAccessFlags.All">
            <summary>
            All possible access rights for a process object.Windows Server 2003 and Windows XP: The size of the PROCESS_ALL_ACCESS flag increased on Windows Server 2008 and Windows Vista. If an application compiled for Windows Server 2008 and Windows Vista is run on Windows Server 2003 or Windows XP, the PROCESS_ALL_ACCESS flag is too large and the function specifying this flag fails with ERROR_ACCESS_DENIED. To avoid this problem, specify the minimum set of access rights required for the operation. If PROCESS_ALL_ACCESS must be used, set _WIN32_WINNT to the minimum operating system targeted by your application (for example, #define _WIN32_WINNT _WIN32_WINNT_WINXP). For more information, see Using the Windows Headers.
            </summary>
        </member>
        <member name="F:ProcessMemoryUtilities.Memory.ProcessAccessFlags.Terminate">
            <summary>
            Required to terminate a process using TerminateProcess.
            </summary>
        </member>
        <member name="F:ProcessMemoryUtilities.Memory.ProcessAccessFlags.CreateThread">
            <summary>
            Required to create a thread.
            </summary>
        </member>
        <member name="F:ProcessMemoryUtilities.Memory.ProcessAccessFlags.VirtualMemoryOperation">
            <summary>
            Required to perform an operation on the address space of a process (see VirtualProtectEx and WriteProcessMemory).
            </summary>
        </member>
        <member name="F:ProcessMemoryUtilities.Memory.ProcessAccessFlags.VirtualMemoryRead">
            <summary>
            Required to read memory in a process using ReadProcessMemory.
            </summary>
        </member>
        <member name="F:ProcessMemoryUtilities.Memory.ProcessAccessFlags.VirtualMemoryWrite">
            <summary>
            Required to write to memory in a process using WriteProcessMemory.
            </summary>
        </member>
        <member name="F:ProcessMemoryUtilities.Memory.ProcessAccessFlags.DuplicateHandle">
            <summary>
            Required to duplicate a handle using DuplicateHandle.
            </summary>
        </member>
        <member name="F:ProcessMemoryUtilities.Memory.ProcessAccessFlags.CreateProcess">
            <summary>
            Required to create a process.
            </summary>
        </member>
        <member name="F:ProcessMemoryUtilities.Memory.ProcessAccessFlags.SetQuota">
            <summary>
            Required to set memory limits using SetProcessWorkingSetSize.
            </summary>
        </member>
        <member name="F:ProcessMemoryUtilities.Memory.ProcessAccessFlags.SetInformation">
            <summary>
            Required to set certain information about a process, such as its priority class (see SetPriorityClass).
            </summary>
        </member>
        <member name="F:ProcessMemoryUtilities.Memory.ProcessAccessFlags.QueryInformation">
            <summary>
            Required to retrieve certain information about a process, such as its token, exit code, and priority class (see OpenProcessToken).
            </summary>
        </member>
        <member name="F:ProcessMemoryUtilities.Memory.ProcessAccessFlags.SuspendResume">
            <summary>
            Required to set memory limits using SetProcessWorkingSetSize.
            </summary>
        </member>
        <member name="F:ProcessMemoryUtilities.Memory.ProcessAccessFlags.Synchronize">
            <summary>
            Required to wait for the process to terminate using the wait functions.
            </summary>
        </member>
    </members>
</doc>
